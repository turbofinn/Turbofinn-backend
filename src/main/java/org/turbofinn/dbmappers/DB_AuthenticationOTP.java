package org.turbofinn.dbmappers;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.amazonaws.services.dynamodbv2.model.AttributeValue;
import com.google.gson.Gson;
import lombok.*;
import org.turbofinn.aws.AWSCredentials;

import java.util.HashMap;
import java.util.List;
import java.util.UUID;

@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@ToString
@DynamoDBTable(tableName = "AuthenticationOTP")
public class DB_AuthenticationOTP extends DB_DateTable {
    public static void main(String[] args) {
        DB_AuthenticationOTP dbAuthenticationOTP = new DB_AuthenticationOTP();
        dbAuthenticationOTP.setDeviceId(UUID.randomUUID().toString());
        dbAuthenticationOTP.setMobileNo("8960880615");
        dbAuthenticationOTP.setName("Gauurav Dingh");
        dbAuthenticationOTP.setOtp("5678");
        dbAuthenticationOTP.setEmailId("gaurab@turbofinn.com");
        dbAuthenticationOTP.save();
    }

    @DynamoDBAutoGeneratedKey
    @DynamoDBHashKey
    String deviceId;
    @DynamoDBIndexHashKey(globalSecondaryIndexName = "mobileNo-index")
    String mobileNo;
    String name;
    String emailId;
    String otp;



    public void save() {
        AWSCredentials.dynamoDBMapper().save(this);
        System.out.println("*** AuthenticationOTP Saved *** " + new Gson().toJson(this));
    }

    public static DB_AuthenticationOTP fetchOtpByDeviceId(String deviceId) {
        return (deviceId == null) ? null : AWSCredentials.dynamoDBMapper().load(DB_AuthenticationOTP.class, deviceId);

    }

    public static DB_AuthenticationOTP fetchOtpByMobileNo(String mobileNo) {
        HashMap<String, AttributeValue> expressionAttributeValues = new HashMap<>();
        expressionAttributeValues.put(":mobileNo", new AttributeValue().withS(mobileNo));
        DynamoDBQueryExpression<DB_AuthenticationOTP> queryExpression = new DynamoDBQueryExpression<DB_AuthenticationOTP>()
                .withIndexName("mobileNo-index")
                .withKeyConditionExpression("mobileNo = :mobileNo")
                .withExpressionAttributeValues(expressionAttributeValues).withConsistentRead(false);
        List<DB_AuthenticationOTP> list = AWSCredentials.dynamoDBMapper().query(DB_AuthenticationOTP.class, queryExpression);
        return !list.isEmpty() ? list.get(0) : null;
    }

    public static void deleteOtp(DB_AuthenticationOTP otpToDelete) {

        if (otpToDelete != null) {
            AWSCredentials.dynamoDBMapper().delete(otpToDelete);
            System.out.println("*** AuthenticationOTP Deleted *** " + new Gson().toJson(otpToDelete));
        } else {
            System.out.println("*** OTP Not Found " + " ***");
        }
    }
}
